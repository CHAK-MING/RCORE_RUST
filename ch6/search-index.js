var searchIndex = new Map(JSON.parse('[\
["os",{"t":"CHCCCCCCQQHCCCCCCISSSESSEESSSSSFNNNNHNNNNEECFEOHNNNNNNNNCFSFFONNNNNNNNNNNNNNNNNNNNNNNNNNNNNKFFFFOOCHHMMOCMOMTFFFTTFTTONNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNHNNOHNNNNNONNNNNNNNNNNNNNNNNNNNNONFFNNNNNNNNNNNNNNNNNNNNNNHFEEFFFFFFFKFFFFOCOOOOOOOHCHOCHHCCOOHOMHHHHSSFFFFKSISFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNOOMNNNNNNNNNNNNNNNNNNNNNNNNNFKIFFOMNNNNNNNOOMNNNOONHHHNNNNHNNNMNNOOONNNNNNNNNJJHHHPPFFFGFTTTTONNONNNNNONNNNNNNNNNNNNNNNNNNNONNHHHNNNHHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNONONNNNONNNHNNHHNHHHNNNNNNNNNNNNNNNNNNNNNNNNNNOTTTFFFTTFFTTTNNNNNNOONNNNNNNNNNNNOONNNNNNNOONNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNHHHHNNNNNNNNNNNNNNNNNNHHHHFOCFNNNNONNNNNSSSSSSSSSSSCCHHHHHHHHHHHHSFFFFFFFOHHNNCOOHHHNHHNONCCOHCOOOHOHOHCHCNNNFNNNNNOOONNNNFFONHNNNNNNHNNNNNONNNNNNFFFFONNNNNNNNNONNNNNNNNNNNNNHNNOHNONNNNNNNNNNNNFFONNNNNOHHHNNNNONNNHHNHNNNNNNHPPFFGPNONNNNNNONNNNOONNNNNNNNONNNNNOONOOOONONNNNNNNNNSSHHHFCHHOOOHHOHHOHOFNNNNNNOOONOONNNO","n":["board","clear_bss","config","console","drivers","fs","lang_items","mm","print","println","rust_main","sbi","sync","syscall","task","timer","trap","BlockDeviceImpl","CLOCK_FREQ","MEMORY_END","MMIO","CLOCK_FREQ","KERNEL_HEAP_SIZE","KERNEL_STACK_SIZE","MEMORY_END","MMIO","PAGE_SIZE","PAGE_SIZE_BITS","TRAMPOLINE","TRAP_CONTEXT","USER_STACK_SIZE","Stdout","borrow","borrow_mut","from","into","print","try_from","try_into","type_id","write_str","BLOCK_DEVICE","BLOCK_DEVICE","block","BLOCK_DEVICE","VirtIOBlock","__private_field","block_device_test","borrow","borrow_mut","deref","from","into","try_from","try_into","type_id","virtio_blk","QUEUE_FRAMES","VIRTIO0","VirtIOBlock","VirtioHal","__private_field","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","deref","dma_alloc","dma_dealloc","from","from","from","into","into","into","new","phys_to_virt","read_block","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","virt_to_phys","write_block","File","OSInode","OpenFlags","Stdin","Stdout","bits","inner","inode","list_apps","open_file","read","readable","readable","stdio","writable","writable","write","CREATE","OSInode","OSInodeInner","OpenFlags","RDONLY","RDWR","ROOT_INODE","TRUNC","WRONLY","__private_field","all","bitand","bitand_assign","bitor","bitor_assign","bits","bits","bitxor","bitxor_assign","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","cmp","complement","contains","deref","difference","empty","eq","extend","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from_bits","from_bits_truncate","from_bits_unchecked","from_iter","hash","inner","inode","insert","intersection","intersects","into","into","into","into","is_all","is_empty","list_apps","new","not","offset","open_file","partial_cmp","read","read_all","read_write","readable","readable","remove","set","sub","sub_assign","symmetric_difference","to_owned","toggle","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","union","writable","writable","write","Stdin","Stdout","borrow","borrow","borrow_mut","borrow_mut","from","from","into","into","read","read","readable","readable","try_from","try_from","try_into","try_into","type_id","type_id","writable","writable","write","write","panic","FrameTracker","KERNEL_SPACE","KERNEL_SPACE","KERNEL_SPACE","MapPermission","MemorySet","PageTable","PageTableEntry","PhysAddr","PhysPageNum","StepByOne","UserBuffer","UserBufferIterator","VirtAddr","VirtPageNum","__private_field","address","areas","bits","bits","buffers","buffers","current_buffer","current_idx","frame_alloc","frame_allocator","frame_dealloc","frames","heap_allocator","init","kernel_token","memory_set","page_table","page_table","ppn","remap_test","root_ppn","step","translated_byte_buffer","translated_ref","translated_refmut","translated_str","PA_WIDTH_SV39","PPN_WIDTH_SV39","PhysAddr","PhysPageNum","SimpleRange","SimpleRangeIterator","StepByOne","VA_WIDTH_SV39","VPNRange","VPN_WIDTH_SV39","VirtAddr","VirtPageNum","aligned","aligned","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","ceil","ceil","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","current","end","eq","eq","eq","eq","floor","floor","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","get_bytes_array","get_end","get_mut","get_mut","get_pte_array","get_ref","get_start","indexes","into","into","into","into","into","into","into_iter","into_iter","l","l","new","new","next","page_offset","page_offset","partial_cmp","partial_cmp","partial_cmp","partial_cmp","r","r","step","step","step","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","FRAME_ALLOCATOR","FrameAllocator","FrameAllocatorImpl","FrameTracker","StackFrameAllocator","__private_field","alloc","alloc","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","current","current","dealloc","dealloc","deref","drop","end","end","fmt","frame_alloc","frame_allocator_test","frame_dealloc","from","from","from","init","init_frame_allocator","into","into","into","new","new","new","ppn","recycled","recycled","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","HEAP_ALLOCATOR","HEAP_SPACE","handle_alloc_error","heap_test","init_heap","Framed","Identical","KERNEL_SPACE","MapArea","MapPermission","MapType","MemorySet","R","U","W","X","__private_field","activate","all","areas","bitand","bitand_assign","bitor","bitor_assign","bits","bits","bitxor","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","complement","contains","copy_data","data_frames","deref","difference","ebss","edata","ekernel","empty","eq","eq","erodata","etext","extend","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from_another","from_bits","from_bits_truncate","from_bits_unchecked","from_elf","from_existed_user","from_iter","hash","insert","insert_framed_area","intersection","intersects","into","into","into","into","into","is_all","is_empty","kernel_token","map","map_one","map_perm","map_trampoline","map_type","new","new_bare","new_kernel","not","page_table","partial_cmp","push","recycle_data_pages","remap_test","remove","remove_area_with_start_vpn","sbss_with_stack","sdata","set","srodata","stext","strampoline","sub","sub_assign","symmetric_difference","to_owned","to_owned","toggle","token","translate","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","union","unmap","unmap_one","vpn_range","A","D","G","PTEFlags","PageTable","PageTableEntry","R","U","UserBuffer","UserBufferIterator","V","W","X","all","bitand","bitand_assign","bitor","bitor_assign","bits","bits","bits","bitxor","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","buffers","buffers","clone","clone","clone_into","clone_into","cmp","complement","contains","current_buffer","current_idx","difference","empty","empty","eq","executable","extend","find_pte","find_pte_create","flags","fmt","fmt","fmt","fmt","fmt","frames","from","from","from","from","from","from_bits","from_bits_truncate","from_bits_unchecked","from_iter","from_token","hash","insert","intersection","intersects","into","into","into","into","into","into_iter","into_iter","is_all","is_empty","is_valid","len","map","new","new","new","next","not","partial_cmp","ppn","readable","remove","root_ppn","set","sub","sub_assign","symmetric_difference","to_owned","to_owned","toggle","token","translate","translate_va","translated_byte_buffer","translated_ref","translated_refmut","translated_str","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","union","unmap","writable","console_getchar","console_putchar","set_timer","shutdown","UPSafeCell","inner","up","UPSafeCell","borrow","borrow_mut","exclusive_access","from","inner","into","new","try_from","try_into","type_id","SYSCALL_CLOSE","SYSCALL_EXEC","SYSCALL_EXIT","SYSCALL_FORK","SYSCALL_GETPID","SYSCALL_GET_TIME","SYSCALL_OPEN","SYSCALL_READ","SYSCALL_WAITPID","SYSCALL_WRITE","SYSCALL_YIELD","fs","process","syscall","sys_close","sys_open","sys_read","sys_write","sys_exec","sys_exit","sys_fork","sys_get_time","sys_getpid","sys_waitpid","sys_yield","IDLE_PID","INITPROC","KernelStack","PidAllocator","PidHandle","Processor","TaskContext","TaskManager","__private_field","add_initproc","add_task","borrow","borrow_mut","context","current","current","current_task","current_trap_cx","current_user_token","deref","exit_current_and_run_next","fetch_task","from","idle_task_cx","into","manager","pid","pid","pid_alloc","processor","ra","ready_queue","recycled","run_tasks","s","schedule","sp","suspend_current_and_run_next","switch","take_current_task","task","try_from","try_into","type_id","TaskContext","borrow","borrow_mut","from","goto_trap_return","into","ra","s","sp","try_from","try_into","type_id","zero_init","TASK_MANAGER","TaskManager","__private_field","add","add_task","borrow","borrow","borrow_mut","borrow_mut","deref","fetch","fetch_task","from","from","into","into","new","ready_queue","try_from","try_from","try_into","try_into","type_id","type_id","KernelStack","PID_ALLOCATOR","PidAllocator","PidHandle","__private_field","alloc","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","current","dealloc","deref","drop","drop","from","from","from","from","get_top","into","into","into","into","kernel_stack_position","new","new","pid","pid_alloc","push_on_top","recycled","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","PROCESSOR","Processor","__private_field","borrow","borrow","borrow_mut","borrow_mut","current","current","current_task","current_trap_cx","current_user_token","deref","from","from","get_idle_task_cx_ptr","idle_task_cx","into","into","new","run_tasks","schedule","take_current","take_current_task","try_from","try_from","try_into","try_into","type_id","type_id","__switch","Ready","Running","TaskControlBlock","TaskControlBlockInner","TaskStatus","Zombie","alloc_fd","base_size","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","children","clone","clone_into","eq","exec","exit_code","fd_table","fork","from","from","from","get_status","get_trap_cx","get_user_token","getpid","inner","inner_exclusive_access","into","into","into","is_zombie","kernel_stack","memory_set","new","parent","pid","task_cx","task_status","to_owned","trap_cx_ppn","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","MSEC_PER_SEC","TICKS_PER_SEC","get_time","get_time_ms","set_next_trigger","TrapContext","context","enable_timer_interrupt","init","kernel_satp","kernel_sp","sepc","set_kernel_trap_entry","set_user_trap_entry","sstatus","trap_from_kernel","trap_handler","trap_handler","trap_return","x","TrapContext","app_init_context","borrow","borrow_mut","fmt","from","into","kernel_satp","kernel_sp","sepc","set_sp","sstatus","trap_handler","try_from","try_into","type_id","x"],"q":[[0,"os"],[17,"os::board"],[21,"os::config"],[31,"os::console"],[41,"os::drivers"],[44,"os::drivers::block"],[57,"os::drivers::block::virtio_blk"],[91,"os::fs"],[108,"os::fs::inode"],[204,"os::fs::stdio"],[228,"os::lang_items"],[229,"os::mm"],[271,"os::mm::address"],[394,"os::mm::frame_allocator"],[443,"os::mm::heap_allocator"],[448,"os::mm::memory_set"],[581,"os::mm::page_table"],[708,"os::sbi"],[712,"os::sync"],[715,"os::sync::up"],[726,"os::syscall"],[740,"os::syscall::fs"],[744,"os::syscall::process"],[751,"os::task"],[795,"os::task::context"],[808,"os::task::manager"],[832,"os::task::pid"],[879,"os::task::processor"],[909,"os::task::switch"],[910,"os::task::task"],[963,"os::timer"],[968,"os::trap"],[983,"os::trap::context"],[1000,"core::fmt"],[1001,"core::result"],[1002,"core::any"],[1003,"easy_fs::block_dev"],[1004,"alloc::sync"],[1005,"alloc::vec"],[1006,"core::option"],[1007,"core::cmp"],[1008,"easy_fs::vfs"],[1009,"core::iter::traits::collect"],[1010,"core::hash"],[1011,"core::panic::panic_info"],[1012,"alloc::string"],[1013,"core::marker"],[1014,"core::clone"],[1015,"core::alloc::layout"],[1016,"core::cell"]],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,6,6,6,0,6,6,6,6,0,0,0,0,0,9,0,9,9,9,9,9,9,9,9,0,0,0,0,0,12,18,83,12,18,83,12,12,83,83,18,83,12,18,83,12,18,83,18,18,83,12,18,83,12,18,83,12,83,18,0,0,0,0,0,21,22,0,0,0,24,24,22,0,24,22,24,21,0,0,0,21,21,0,21,21,29,21,21,21,21,21,21,21,21,21,22,84,29,21,22,84,29,21,21,21,21,21,21,29,21,21,21,21,21,21,21,21,21,22,84,29,21,21,21,21,21,21,22,84,21,21,21,22,84,29,21,21,21,0,22,21,84,0,21,22,22,21,22,22,21,21,21,21,21,21,21,22,84,29,21,22,84,29,21,22,84,29,21,21,22,22,22,0,0,36,37,36,37,36,37,36,37,36,37,36,37,36,37,36,37,36,37,36,37,36,37,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,63,0,58,59,51,25,65,65,65,0,0,0,62,0,0,0,0,0,58,13,0,62,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,42,43,53,42,43,39,44,45,53,42,43,39,44,45,42,43,42,43,39,44,45,42,43,39,44,45,42,43,39,44,53,53,42,43,39,44,42,43,42,43,39,44,53,42,42,42,43,43,43,39,39,39,44,44,44,45,39,45,42,39,39,42,45,44,53,42,43,39,44,45,53,45,85,45,53,45,53,42,43,42,43,39,44,85,45,40,39,44,42,43,39,44,45,53,42,43,39,44,45,53,42,43,39,44,45,53,42,43,39,44,45,0,0,0,0,0,56,54,55,13,55,56,13,55,56,55,86,54,55,56,13,55,86,13,0,0,0,13,55,56,55,0,13,55,56,54,13,55,13,55,86,13,55,56,13,55,56,13,55,56,0,0,0,0,0,60,60,0,0,0,0,0,59,59,59,59,63,58,59,58,59,59,59,59,59,59,59,59,58,61,63,60,59,58,61,63,60,59,60,59,60,59,59,59,59,61,61,63,59,0,0,0,59,60,59,0,0,59,60,59,59,59,59,59,58,61,63,60,59,61,59,59,59,58,58,59,59,59,58,59,59,58,61,63,60,59,59,59,0,61,61,61,58,61,61,58,58,59,58,59,58,58,0,59,58,0,0,59,0,0,0,59,59,59,60,59,59,58,58,58,61,63,60,59,58,61,63,60,59,58,61,63,60,59,59,61,61,61,64,64,64,0,0,0,64,64,0,0,64,64,64,64,64,64,64,64,64,64,51,64,64,62,25,65,64,51,62,25,65,64,51,25,65,64,51,64,51,64,64,64,65,65,64,64,51,64,51,64,62,62,51,64,64,64,64,64,62,62,25,65,64,51,64,64,64,64,62,64,64,64,64,62,25,65,64,51,25,65,64,64,51,25,62,62,25,51,65,64,64,51,51,64,62,64,64,64,64,64,51,64,62,62,62,0,0,0,0,62,25,65,64,51,62,25,65,64,51,62,25,65,64,51,64,62,51,0,0,0,0,0,15,0,0,15,15,15,15,15,15,15,15,15,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,70,0,0,70,70,0,75,79,0,0,0,70,0,0,70,79,70,0,0,77,0,0,72,73,75,0,72,0,72,0,0,0,0,70,70,70,0,72,72,72,72,72,72,72,72,72,72,72,72,0,0,74,73,0,73,74,73,74,74,73,0,73,74,73,74,73,73,73,74,73,74,73,74,0,0,0,0,76,75,75,71,77,76,75,71,77,76,75,75,76,71,77,75,71,77,76,77,75,71,77,76,0,75,77,77,0,77,75,75,71,77,76,75,71,77,76,75,71,77,76,0,0,80,79,80,79,80,79,79,0,0,0,80,79,80,79,79,79,80,79,0,0,79,0,79,80,79,80,79,80,0,82,82,0,0,0,82,81,81,68,81,82,68,81,82,81,82,82,82,68,81,81,68,68,81,82,81,81,81,68,68,68,68,81,82,81,68,81,68,81,68,81,81,82,81,68,81,82,68,81,82,68,81,82,0,0,0,0,0,0,0,0,0,69,69,69,0,0,69,0,0,69,0,69,0,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69],"f":"`{{}b}````````{{}d}`````````````````````{ce{}{}}0{cc{}}1{fb}{c{{h{e}}}{}{}}0{cj{}}{{ln}A`}``````755{Ab{{Af{Ad}}}}56332``````666666{Ah{{An{{Al{Aj}}}}}}{B`B`}{{B`B`}Bb}888999{{}Bd}2{{BdB`{Bh{Bf}}}b}88888877730````````={{nBj}{{Bn{{Af{Bl}}}}}}{{C`Cb}B`}{C`Cd}``0`1``````````{{}Bj}{{BjBj}Bj}{{BjBj}b}10{BjCf}`21{ce{}{}}0000000{BjBj}{{ce}b{}{}}{{BjBj}Ch}2{{BjBj}Cd}{Cj{{Af{Cl}}}}891{{Bjc}b{{D`{}{{Cn{Bj}}}}}}{{BjDb}A`}0000{cc{}}000{Cf{{Bn{Bj}}}}{CfBj}0{cBj{{D`{}{{Cn{Bj}}}}}}{{Bjc}bDd}``>?8<<<<{BjCd}0{{}b}{{CdCd{Af{Cl}}}Bl}>`{{nBj}{{Bn{{Af{Bl}}}}}}{{BjBj}{{Bn{Ch}}}}{{BlCb}B`}{Bl{{Al{Bf}}}}{Bj{{Df{CdCd}}}}{BlCd}`{{BjBj}b}{{BjBjCd}b}{{BjBj}Bj}20{ce{}{}}3{c{{h{e}}}{}{}}0000000{cj{}}00036`9``2222{cc{}}033{{DhCb}B`}{{DjCb}B`}{DhCd}{DjCd}6666551032{Dld}````````````````````````{{}{{Bn{Aj}}}}`{Dnb}``{{}b}{{}B`}````1`{E`b}{{B`BfB`}{{Al{{Bh{Bf}}}}}}{B`c{}}0{{B`Bf}Eb}````````````{EdCd}{EfCd}{ce{}{}}00000000000{EdDn}{EfEh}{EdEd}{EfEf}{DnDn}{EhEh}{{{Ej{c}}}{{Ej{c}}}{E`ElEnF`FbFd}}{{ce}b{}{}}0000{{EdEd}Ch}{{EfEf}Ch}{{DnDn}Ch}{{EhEh}Ch}``{{EdEd}Cd}{{EfEf}Cd}{{DnDn}Cd}{{EhEh}Cd}?>{{EdDb}A`}{{EfDb}A`}{{DnDb}A`}{{EhDb}A`}{cc{}}0{DnEd}{B`Ed}{B`Ef}3{EhEf}{B`Dn}{EdDn}66{B`Eh}{EfEh}8{Dn{{Bh{Bf}}}}{{{Ej{c}}}c{E`ElEnF`Fb}}{Edc{}}{Dnc{}}{Dn{{Bh{Ff}}}}23{Eh{{Fh{B`}}}}{ce{}{}}000000{{{Ej{c}}}e{E`ElEnF`Fb}{}}``{{cc}{{Fj{c}}}{E`ElEnF`Fb}}{{cc}{{Ej{c}}}{E`ElEnF`Fb}}{{{Fj{c}}}{{Bn{e}}}{E`ElEnF`Fb}{}}{EdB`}{EfB`}{{EdEd}{{Bn{Ch}}}}{{EfEf}{{Bn{Ch}}}}{{DnDn}{{Bn{Ch}}}}{{EhEh}{{Bn{Ch}}}}``{E`b}{Dnb}{Ehb}====={c{{h{e}}}{}{}}00000000000{cj{}}00000``````{Fl{{Bn{Dn}}}}{Fn{{Bn{Dn}}}}{ce{}{}}00000``{{FlDn}b}{{FnDn}b}{G`{{An{Fn}}}}{Ajb}``{{AjDb}A`}{{}{{Bn{Aj}}}}{{}b}={cc{}}00{{FnDnDn}b}2999{{}Fl}{DnAj}{{}Fn}```{c{{h{e}}}{}{}}00000{cj{}}00``{Gbd}88````````````{Gdb}{{}Gf}`{{GfGf}Gf}{{GfGf}b}10{GfBf}`21{ce{}{}}000000000{GhGh}{GfGf}{{ce}b{}{}}0{{GfGf}Ch}2{{GfGf}Cd}{{GjGl{Bh{Bf}}}b}`{Gn{{Af{{An{Gd}}}}}}:```;{{GhGh}Cd}3``{{Gfc}b{{D`{}{{Cn{Gf}}}}}}{{GhDb}A`}{{GfDb}A`}0000{cc{}}0000{GjGj}{Bf{{Bn{Gf}}}}{BfGf}0{{{Bh{Bf}}}{{Df{GdB`B`}}}}{GdGd}{cGf{{D`{}{{Cn{Gf}}}}}}{{Gfc}bDd}{{GfGf}b}{{GdEfEfGf}b}{{GfGf}Gf}{{GfGf}Cd}{ce{}{}}0000{GfCd}0{{}B`}{{GjGl}b}{{GjGlEh}b}`{Gdb}`{{EfEfGhGf}Gj}{{}Gd}0{GfGf}`{{GfGf}{{Bn{Ch}}}}{{GdGj{Bn{{Bh{Bf}}}}}b}5{{}b}?{{GdEh}b}``{{GfGfCd}b}```?{{GfGf}b}{{GfGf}Gf}??1{GdB`}{{GdEh}{{Bn{Ff}}}}{c{{h{e}}}{}{}}000000000{cj{}}00004{{GjGl}b}{{GjGlEh}b}``````````````{{}H`}{{H`H`}H`}{{H`H`}b}10{H`Bf}``21{ce{}{}}000000000``{H`H`}{FfFf}{{ce}b{}{}}0{{H`H`}Ch}3{{H`H`}Cd}``89{{}Ff}1{FfCd}{{H`c}b{{D`{}{{Cn{H`}}}}}}{{GlEh}{{Bn{Ff}}}}0{FfH`}{{H`Db}A`}0000`{cc{}}0000{Bf{{Bn{H`}}}}{BfH`}0{cH`{{D`{}{{Cn{H`}}}}}}{B`Gl}{{H`c}bDd}{{H`H`}b}{{H`H`}H`}>{ce{}{}}0000{Cbc{}}1{H`Cd}0?{CbB`}{{GlEhDnH`}b}{{}Gl}{{{Al{{Bh{Bf}}}}}Cb}{{DnH`}Ff}{Hb{{Bn{c}}}{}}{H`H`}{{H`H`}{{Bn{Ch}}}}{FfDn}{FfCd}>`{{H`H`Cd}b}>?>==?{GlB`}{{GlEh}{{Bn{Ff}}}}{{GlEf}{{Bn{Ed}}}}{{B`BfB`}{{Al{{Bh{Bf}}}}}}{B`c{}}0{{B`Bf}Eb}{c{{h{e}}}{}{}}000000000{cj{}}0000{{H`H`}H`}{{GlEh}b};{{}B`}{B`b}0{Cdd}````{ce{}{}}0{{{An{c}}}{{Hd{c}}}{}}{cc{}}`2{c{{An{c}}}{}}::9`````````````{{B`{Fh{B`}}}Hf}{B`Hf}{{BfCf}Hf}{{B`BfB`}Hf}0{BfHf}{Bbd}{{}Hf}00{{HfBb}Hf}1`````````{{}b}{{{Af{Hh}}}b}==```{{}{{Bn{{Af{Hh}}}}}}{{}Hj}{{}B`}{Hl{{Af{Hh}}}}{Bbb}4{cc{}}`{ce{}{}}```{{}Hn}````9`{I`b}`:`8`{c{{h{e}}}{}{}}0{cj{}}`445{B`I`}5```221{{}I`}```{{Ib{Af{Hh}}}b}>7777{Id{{An{Ib}}}}{Ib{{Bn{{Af{Hh}}}}}}?::99{{}Ib}`777766`````{IfHn};;;;;;;;`{{IfB`}b}{Ih{{An{If}}}}{Hnb}{Ijb}{cc{}}000{IjB`}{ce{}{}}000{B`{{Df{B`B`}}}}{{}If}{HnIj}`{{}Hn}{{Ijc}{}Il}`{c{{h{e}}}{}{}}0000000{cj{}}000```7777{In{{Bn{{Af{Hh}}}}}}`{{}{{Bn{{Af{Hh}}}}}}{{}Hj}{{}B`}{J`{{An{In}}}}>>{InI`}`=={{}In}{{}b}{I`b}87::::99```````{JbB`}`{ce{}{}}00000`{JdJd}{{ce}b{}{}}{{JdJd}Cd}{{Hh{Bh{Bf}}}b}``{{{Af{Hh}}}{{Af{Hh}}}}{cc{}}00{JbJd}{JbHj}9{HhB`}`{Hh{{Hd{Jb}}}}:::{JbCd}``{{{Bh{Bf}}}Hh}````<`{c{{h{e}}}{}{}}00000{cj{}}00``{{}B`}0{{}b}``00```00`{{}d}0`0``{{B`B`B`B`B`}Hj}{ce{}{}}0{{HjDb}A`}>1```{{HjB`}b}``887`","D":"CGb","p":[[1,"unit"],[1,"never"],[5,"Arguments",1000],[6,"Result",1001],[5,"TypeId",1002],[5,"Stdout",31],[1,"str"],[8,"Result",1000],[5,"BLOCK_DEVICE",44],[10,"BlockDevice",1003],[5,"Arc",1004],[5,"QUEUE_FRAMES",57],[5,"FrameTracker",394],[5,"Vec",1005],[5,"UPSafeCell",715],[1,"usize"],[1,"i32"],[5,"VirtIOBlock",57],[1,"u8"],[1,"slice"],[5,"OpenFlags",108],[5,"OSInode",108],[6,"Option",1006],[10,"File",91],[5,"UserBuffer",581],[1,"bool"],[1,"u32"],[6,"Ordering",1007],[5,"ROOT_INODE",108],[5,"Inode",1008],[17,"Item"],[10,"IntoIterator",1009],[5,"Formatter",1000],[10,"Hasher",1010],[1,"tuple"],[5,"Stdin",204],[5,"Stdout",204],[5,"PanicInfo",1011],[5,"PhysPageNum",271],[10,"StepByOne",271],[5,"String",1012],[5,"PhysAddr",271],[5,"VirtAddr",271],[5,"VirtPageNum",271],[5,"SimpleRange",271],[10,"Copy",1013],[10,"PartialEq",1007],[10,"PartialOrd",1007],[10,"Debug",1000],[10,"Clone",1014],[5,"PageTableEntry",581],[1,"array"],[5,"SimpleRangeIterator",271],[10,"FrameAllocator",394],[5,"StackFrameAllocator",394],[5,"FRAME_ALLOCATOR",394],[5,"Layout",1015],[5,"MemorySet",448],[5,"MapPermission",448],[6,"MapType",448],[5,"MapArea",448],[5,"PageTable",581],[5,"KERNEL_SPACE",448],[5,"PTEFlags",581],[5,"UserBufferIterator",581],[5,"RefMut",1016],[1,"isize"],[5,"TaskControlBlock",910],[5,"TrapContext",983],[5,"INITPROC",751],[5,"PidHandle",832],[5,"TaskContext",795],[5,"TaskManager",808],[5,"TASK_MANAGER",808],[5,"PidAllocator",832],[5,"PID_ALLOCATOR",832],[5,"KernelStack",832],[10,"Sized",1013],[5,"Processor",879],[5,"PROCESSOR",879],[5,"TaskControlBlockInner",910],[6,"TaskStatus",910],[5,"VirtioHal",57],[5,"OSInodeInner",108],[8,"VPNRange",271],[8,"FrameAllocatorImpl",394]],"r":[[21,17],[24,17],[25,17],[41,44],[42,44],[45,57],[92,108],[93,108],[94,204],[95,204],[99,108],[100,108],[229,394],[230,448],[231,448],[232,448],[233,448],[234,448],[235,581],[236,581],[237,271],[238,271],[239,271],[240,581],[241,581],[242,271],[243,271],[253,394],[255,394],[259,448],[264,448],[267,581],[268,581],[269,581],[270,581],[712,715],[753,832],[754,832],[755,832],[756,879],[757,795],[758,808],[761,808],[767,879],[768,879],[769,879],[772,808],[779,832],[784,879],[786,879],[790,879],[968,983]],"b":[[145,"impl-Octal-for-OpenFlags"],[146,"impl-LowerHex-for-OpenFlags"],[147,"impl-Debug-for-OpenFlags"],[148,"impl-Binary-for-OpenFlags"],[149,"impl-UpperHex-for-OpenFlags"],[327,"impl-From%3CPhysPageNum%3E-for-PhysAddr"],[328,"impl-From%3Cusize%3E-for-PhysAddr"],[329,"impl-From%3Cusize%3E-for-VirtAddr"],[331,"impl-From%3CVirtPageNum%3E-for-VirtAddr"],[332,"impl-From%3Cusize%3E-for-PhysPageNum"],[333,"impl-From%3CPhysAddr%3E-for-PhysPageNum"],[336,"impl-From%3Cusize%3E-for-VirtPageNum"],[337,"impl-From%3CVirtAddr%3E-for-VirtPageNum"],[502,"impl-Debug-for-MapPermission"],[503,"impl-Binary-for-MapPermission"],[504,"impl-UpperHex-for-MapPermission"],[505,"impl-LowerHex-for-MapPermission"],[506,"impl-Octal-for-MapPermission"],[634,"impl-Debug-for-PTEFlags"],[635,"impl-LowerHex-for-PTEFlags"],[636,"impl-UpperHex-for-PTEFlags"],[637,"impl-Octal-for-PTEFlags"],[638,"impl-Binary-for-PTEFlags"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAC8CdgABAAAABQAAABIAEAAlAA4ANgARAE4ADQBhAAEAaAAAAGsAAABzAAAAdgAAAH0AAACAAAoAjQAAAJAABgCeAAMArgAAALAAAQC0AAEAuwAAAL0ACwDKAAIAzwADANcADgDnAAEA9QAAAPcAAQD7AAIAAQEAAAcBAQAKAQAAEAEBABcBAAAZAQAAHgELACwBEwBCAQMASAECAEwBAgBRAQEAVQEAAFoBAABiAQYAawEFAHIBGACMAQEAkAERAKgBAACtAQAArwEMAL8BAADBAQEAzAEAAM8BAADVAQAA2AEOAOoBAQDtAQIA8QEKAAECAAAHAgEAFQICABkCAQAeAgIAJQIBACgCAgAuAgEAMwIOAEMCBgBMAgEAUAICAFkCAABdAgkAaAIFAHACAQB1AgAAdwIAAHsCBQCJAgAAiwIAAJQCAQCeAgAAoAIAAKQCAACpAgEAswIOAM0CAQDUAg0A4wIAAOUCCADvAgAA+AIAAPsCAQD+AgAAAwMAAAsDAAAPAwEAGQMCAB0DAQAlAwIAKQMAACsDAAAuAwQAOgMGAEIDAABFAwAARwMIAFEDAgBgAwAAYwMNAHIDBAB8AwAAiAMcAKgDBQCxAxQA0AMBANoDAgDlAwIA"}]\
]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
