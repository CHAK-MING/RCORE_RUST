var searchIndex = new Map(JSON.parse('[\
["os",{"t":"CHCCCCCQQHCCCCCCSSSESSEESSSSSHFNNNNHNNNNHHHEEEEEEEEEECECCHCCEESSFFFFKSISFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNOOMNNNNNNNNNNNNNNNNNNNNNNNNFKIFFOMNNNNNNNOOMNNNOONHHHNNNNHNNNMNNOOONNNNNNNNNJJHHHPPFFFGFTTTTONNNNONNNNNONNNNNNNNNNNNNNNNNNNNONNHHHNNNHHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONONNNNONNHNHHNNNHHHNNNNNNNNNNNNNNNNNNNNNNNNNNOTTTFFFTTTTTNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNHNNNNNNNNNNNNHHHECFNNNNONNNNNSSSSSCCHSHHHHHFFFFONNNNNNNHCOHHNHNNNNNNONNNHNHNOOHNHNOOHCCONNNNNNNNNFNNNNNOOONNNNHPPPFGONNNNNNNNNNNNONNONOOONONNNNNNSSHHHFCHHOOOHHOHHOHOFNNNNNOOONOONNNO","n":["board","clear_bss","config","console","lang_items","loader","mm","print","println","rust_main","sbi","sync","syscall","task","timer","trap","CLOCK_FREQ","MEMORY_END","MMIO","CLOCK_FREQ","KERNEL_HEAP_SIZE","KERNEL_STACK_SIZE","MEMORY_END","MMIO","PAGE_SIZE","PAGE_SIZE_BITS","TRAMPOLINE","TRAP_CONTEXT","USER_STACK_SIZE","kernel_stack_position","Stdout","borrow","borrow_mut","from","into","print","try_from","try_into","type_id","write_str","panic","get_app_data","get_num_app","FrameTracker","KERNEL_SPACE","KERNEL_SPACE","MapPermission","MemorySet","PageTableEntry","PhysAddr","PhysPageNum","VirtAddr","VirtPageNum","address","frame_alloc","frame_allocator","heap_allocator","init","memory_set","page_table","remap_test","translated_byte_buffer","PA_WIDTH_SV39","PPN_WIDTH_SV39","PhysAddr","PhysPageNum","SimpleRange","SimpleRangeIterator","StepByOne","VA_WIDTH_SV39","VPNRange","VPN_WIDTH_SV39","VirtAddr","VirtPageNum","aligned","aligned","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","ceil","ceil","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","current","end","eq","eq","eq","eq","floor","floor","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","get_bytes_array","get_end","get_mut","get_pte_array","get_start","indexes","into","into","into","into","into","into","into_iter","into_iter","l","l","new","new","next","page_offset","page_offset","partial_cmp","partial_cmp","partial_cmp","partial_cmp","r","r","step","step","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","FRAME_ALLOCATOR","FrameAllocator","FrameAllocatorImpl","FrameTracker","StackFrameAllocator","__private_field","alloc","alloc","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","current","current","dealloc","dealloc","deref","drop","end","end","fmt","frame_alloc","frame_allocator_test","frame_dealloc","from","from","from","init","init_frame_allocator","into","into","into","new","new","new","ppn","recycled","recycled","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","HEAP_ALLOCATOR","HEAP_SPACE","handle_alloc_error","heap_test","init_heap","Framed","Identical","KERNEL_SPACE","MapArea","MapPermission","MapType","MemorySet","R","U","W","X","__private_field","activate","all","append_to","append_to","areas","bitand","bitand_assign","bitor","bitor_assign","bits","bits","bitxor","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","complement","contains","copy_data","data_frames","deref","difference","ebss","edata","ekernel","empty","eq","eq","erodata","etext","extend","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from_bits","from_bits_truncate","from_bits_unchecked","from_elf","from_iter","hash","insert","insert_framed_area","intersection","intersects","into","into","into","into","into","is_all","is_empty","map","map_one","map_perm","map_trampoline","map_type","new","new_bare","new_kernel","not","page_table","partial_cmp","push","remap_test","remove","sbss_with_stack","sdata","set","shrink_to","shrink_to","srodata","stext","strampoline","sub","sub_assign","symmetric_difference","to_owned","to_owned","toggle","token","translate","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","union","unmap","unmap_one","vpn_range","A","D","G","PTEFlags","PageTable","PageTableEntry","R","U","V","W","X","all","bitand","bitand_assign","bitor","bitor_assign","bits","bits","bits","bitxor","bitxor_assign","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","complement","contains","difference","empty","empty","eq","executable","extend","find_pte","find_pte_create","flags","fmt","fmt","fmt","fmt","fmt","frames","from","from","from","from_bits","from_bits_truncate","from_bits_unchecked","from_iter","from_token","hash","insert","intersection","intersects","into","into","into","is_all","is_empty","is_valid","map","new","new","not","partial_cmp","ppn","readable","remove","root_ppn","set","sub","sub_assign","symmetric_difference","to_owned","to_owned","toggle","token","translate","translated_byte_buffer","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","union","unmap","writable","console_putchar","set_timer","shutdown","UPSafeCell","up","UPSafeCell","borrow","borrow_mut","exclusive_access","from","inner","into","new","try_from","try_into","type_id","SYSCALL_EXIT","SYSCALL_GET_TIME","SYSCALL_SBRK","SYSCALL_WRITE","SYSCALL_YIELD","fs","process","syscall","FD_STDOUT","sys_write","sys_exit","sys_get_time","sys_sbrk","sys_yield","TASK_MANAGER","TaskContext","TaskManager","TaskManagerInner","__private_field","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","change_current_program_brk","change_program_brk","context","current_task","current_trap_cx","current_user_token","deref","exit_current_and_run_next","find_next_task","from","from","from","get_current_token","get_current_trap_cx","inner","into","into","into","mark_current_exited","mark_current_exited","mark_current_suspended","mark_current_suspended","num_app","ra","run_first_task","run_first_task","run_next_task","run_next_task","s","sp","suspend_current_and_run_next","switch","task","tasks","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","TaskContext","borrow","borrow_mut","from","goto_trap_return","into","ra","s","sp","try_from","try_into","type_id","zero_init","__switch","Exited","Ready","Running","TaskControlBlock","TaskStatus","base_size","borrow","borrow","borrow_mut","borrow_mut","change_program_brk","clone","clone_into","eq","from","from","get_trap_cx","get_user_token","heap_bottom","into","into","memory_set","new","program_brk","task_cx","task_status","to_owned","trap_cx_ppn","try_from","try_from","try_into","try_into","type_id","type_id","MSEC_PER_SEC","TICKS_PER_SEC","get_time","get_time_ms","set_next_trigger","TrapContext","context","enable_timer_interrupt","init","kernel_satp","kernel_sp","sepc","set_kernel_trap_entry","set_user_trap_entry","sstatus","trap_from_kernel","trap_handler","trap_handler","trap_return","x","TrapContext","app_init_context","borrow","borrow_mut","from","into","kernel_satp","kernel_sp","sepc","set_sp","sstatus","trap_handler","try_from","try_into","type_id","x"],"q":[[0,"os"],[16,"os::board"],[19,"os::config"],[30,"os::console"],[40,"os::lang_items"],[41,"os::loader"],[43,"os::mm"],[62,"os::mm::address"],[182,"os::mm::frame_allocator"],[231,"os::mm::heap_allocator"],[236,"os::mm::memory_set"],[368,"os::mm::page_table"],[466,"os::sbi"],[469,"os::sync"],[471,"os::sync::up"],[482,"os::syscall"],[490,"os::syscall::fs"],[492,"os::syscall::process"],[496,"os::task"],[550,"os::task::context"],[563,"os::task::switch"],[564,"os::task::task"],[598,"os::timer"],[603,"os::trap"],[618,"os::trap::context"],[634,"core::fmt"],[635,"core::result"],[636,"core::any"],[637,"core::panic::panic_info"],[638,"core::marker"],[639,"core::cmp"],[640,"core::clone"],[641,"core::option"],[642,"core::alloc::layout"],[643,"alloc::sync"],[644,"core::iter::traits::collect"],[645,"core::hash"],[646,"alloc::vec"],[647,"core::cell"]],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,8,8,8,0,8,8,8,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,16,30,14,16,17,18,19,30,14,16,17,18,19,14,16,14,16,17,18,19,14,16,17,18,19,14,16,17,18,30,30,14,16,17,18,14,16,14,16,17,18,30,14,14,14,16,16,16,17,17,17,18,18,18,19,17,19,17,17,19,18,30,14,16,17,18,19,30,19,59,19,30,19,30,14,16,14,16,17,18,59,19,20,18,14,16,17,18,19,30,14,16,17,18,19,30,14,16,17,18,19,30,14,16,17,18,19,0,0,0,0,0,34,32,33,36,33,34,36,33,34,33,60,32,33,34,36,33,60,36,0,0,0,36,33,34,33,0,36,33,34,32,36,33,36,33,60,36,33,34,36,33,34,36,33,34,0,0,0,0,0,42,42,0,0,0,0,0,39,39,39,39,43,38,39,38,40,38,39,39,39,39,39,39,39,39,38,40,43,42,39,38,40,43,42,39,42,39,42,39,39,39,39,40,40,43,39,0,0,0,39,42,39,0,0,39,42,39,39,39,39,39,38,40,43,42,39,39,39,39,38,39,39,39,38,39,39,38,40,43,42,39,39,39,40,40,40,38,40,40,38,38,39,38,39,38,0,39,0,0,39,38,40,0,0,0,39,39,39,42,39,39,38,38,38,40,43,42,39,38,40,43,42,39,38,40,43,42,39,39,40,40,40,48,48,48,0,0,0,48,48,48,48,48,48,48,48,48,48,48,48,28,48,48,41,48,28,41,48,28,48,28,48,28,48,48,48,48,48,28,48,28,48,41,41,28,48,48,48,48,48,41,41,48,28,48,48,48,48,41,48,48,48,48,41,48,28,48,48,28,41,41,28,48,48,28,28,48,41,48,48,48,48,48,28,48,41,41,0,41,48,28,41,48,28,41,48,28,48,41,28,0,0,0,0,0,0,35,35,35,35,35,35,35,35,35,35,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,55,53,61,55,53,61,55,53,0,0,61,0,0,55,0,53,53,61,55,53,53,53,53,61,55,0,53,0,53,53,56,0,53,0,53,56,56,0,0,0,61,53,61,55,53,61,55,53,61,55,0,56,56,56,56,56,56,56,56,56,56,56,56,0,58,58,58,0,0,57,57,58,57,58,57,58,58,58,57,58,57,57,57,57,58,57,57,57,57,57,58,57,57,58,57,58,57,58,0,0,0,0,0,0,0,0,0,54,54,54,0,0,54,0,0,54,0,54,0,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54],"f":"`{{}b}```````{{}d}```````````````````{f{{h{ff}}}}`{ce{}{}}0{cc{}}1{jb}{c{{l{e}}}{}{}}0{cn{}}{{A`Ab}Ad}{Afd}{f{{Aj{Ah}}}}{{}f}``````````````;````````````````{AlAn}{B`An}::::::::::::{AlBb}{B`Bd}{AlAl}{B`B`}{BbBb}{BdBd}{{{Bf{c}}}{{Bf{c}}}{BhBjBlBnC`Cb}}{{ce}b{}{}}0000{{AlAl}Cd}{{B`B`}Cd}{{BbBb}Cd}{{BdBd}Cd}``{{AlAl}An}{{B`B`}An}{{BbBb}An}{{BdBd}An}?>{{AlCf}Ad}{{B`Cf}Ad}{{BbCf}Ad}{{BdCf}Ad}{cc{}}0{BbAl}{fAl}2{BdB`}{fB`}{fBb}{AlBb}66{B`Bd}{fBd}8{Bb{{Aj{Ah}}}}{{{Bf{c}}}c{BhBjBlBnC`}}{Bbc{}}{Bb{{Aj{Ch}}}}2{Bd{{Cj{f}}}}{ce{}{}}000000{{{Bf{c}}}e{BhBjBlBnC`}{}}``{{cc}{{Cl{c}}}{BhBjBlBnC`}}{{cc}{{Bf{c}}}{BhBjBlBnC`}}{{{Cl{c}}}{{Cn{e}}}{BhBjBlBnC`}{}}{Alf}{B`f}{{AlAl}{{Cn{Cd}}}}{{B`B`}{{Cn{Cd}}}}{{BbBb}{{Cn{Cd}}}}{{BdBd}{{Cn{Cd}}}}``{Bhb}{Bdb}<<<<<{c{{l{e}}}{}{}}00000000000{cn{}}00000``````{D`{{Cn{Bb}}}}{Db{{Cn{Bb}}}}{ce{}{}}00000``{{D`Bb}b}{{DbBb}b}{Dd{{Df{Db}}}}{Dhb}``{{DhCf}Ad}{{}{{Cn{Dh}}}}{{}b}{Bbb}{cc{}}00{{DbBbBb}b}3:::{{}D`}{BbDh}{{}Db}```{c{{l{e}}}{}{}}00000{cn{}}00``{Djd}99````````````{Dlb}{{}Dn}{{DlB`B`}An}{{E`EbBd}b}`{{DnDn}Dn}{{DnDn}b}10{DnAh}`21{ce{}{}}000000000{EdEd}{DnDn}{{ce}b{}{}}0{{DnDn}Cd}2{{DnDn}An}{{E`Eb{Aj{Ah}}}b}`{Ef{{Eh{{Df{Dl}}}}}}:```={{EdEd}An}3``{{Dnc}b{{El{}{{Ej{Dn}}}}}}{{EdCf}Ad}{{DnCf}Ad}0000{cc{}}0000{Ah{{Cn{Dn}}}}{AhDn}0{{{Aj{Ah}}}{{h{Dlff}}}}{cDn{{El{}{{Ej{Dn}}}}}}{{Dnc}bEn}{{DnDn}b}{{DlB`B`Dn}b}{{DnDn}Dn}?{ce{}{}}0000{DnAn}0{{E`Eb}b}{{E`EbBd}b}`{Dlb}`{{B`B`EdDn}E`}{{}Dl}0{DnDn}`{{DnDn}{{Cn{Cd}}}}{{DlE`{Cn{{Aj{Ah}}}}}b}{{}b}=``{{DnDnAn}b}{{DlB`B`}An}9```=?=<<?{Dlf}{{DlBd}{{Cn{Ch}}}}{c{{l{e}}}{}{}}000000000{cn{}}0000{{DnDn}Dn}?>````````````{{}F`}{{F`F`}F`}{{F`F`}b}10{F`Ah}``21{ce{}{}}00000{F`F`}{ChCh}{{ce}b{}{}}0{{F`F`}Cd}3{{F`F`}An}89{{}Ch}1{ChAn}{{F`c}b{{El{}{{Ej{F`}}}}}}{{EbBd}{{Cn{Ch}}}}0{ChF`}{{F`Cf}Ad}0000`{cc{}}00{Ah{{Cn{F`}}}}{AhF`}0{cF`{{El{}{{Ej{F`}}}}}}{fEb}{{F`c}bEn}{{F`F`}b}{{F`F`}F`}>{ce{}{}}00{F`An}0>{{EbBdBbF`}b}{{}Eb}{{BbF`}Ch}{F`F`}{{F`F`}{{Cn{Cd}}}}{ChBb}{ChAn}:`{{F`F`An}b}:;:99;{Ebf}{{EbBd}{{Cn{Ch}}}}{{fAhf}{{Fb{{Aj{Ah}}}}}}{c{{l{e}}}{}{}}00000{cn{}}00?{{EbBd}b}7{fb}0{And}```{ce{}{}}0{{{Df{c}}}{{Fd{c}}}{}}{cc{}}`2{c{{Df{c}}}{}}887```````{{f{Cj{f}}}Ff}`{{fAhf}Ff}{Fhd}{{}Ff}{FhFf}1`````888888{{FjFh}{{Cn{f}}}}{Fh{{Cn{f}}}}``{{}Fl}{{}f}{FnFj}{{}b}{Fj{{Cn{f}}}}==={Fjf}{FjFl}`{ce{}{}}004{Fjb}50``5{Fjd}61``6```{c{{l{e}}}{}{}}00000{cn{}}00`44{cc{}}{fG`}6```332{{}G`}```````7777{{GbFh}{{Cn{f}}}}{GdGd}{{ce}b{}{}}{{GdGd}An}66{GbFl}{Gbf}`==`{{{Aj{Ah}}f}Gb}```>`;;;;::``{{}f}0{{}b}``00```00`{{}d}0`0``{{fffff}Fl}{ce{}{}}0>0```{{Flf}b}``{c{{l{e}}}{}{}}0{cn{}}`","D":"AOd","p":[[1,"unit"],[1,"never"],[1,"usize"],[1,"tuple"],[5,"Arguments",634],[6,"Result",635],[5,"TypeId",636],[5,"Stdout",30],[1,"str"],[8,"Result",634],[5,"PanicInfo",637],[1,"u8"],[1,"slice"],[5,"PhysAddr",62],[1,"bool"],[5,"VirtAddr",62],[5,"PhysPageNum",62],[5,"VirtPageNum",62],[5,"SimpleRange",62],[10,"StepByOne",62],[10,"Copy",638],[10,"PartialEq",639],[10,"PartialOrd",639],[10,"Debug",634],[10,"Clone",640],[6,"Ordering",639],[5,"Formatter",634],[5,"PageTableEntry",368],[1,"array"],[5,"SimpleRangeIterator",62],[6,"Option",641],[10,"FrameAllocator",182],[5,"StackFrameAllocator",182],[5,"FRAME_ALLOCATOR",182],[5,"UPSafeCell",471],[5,"FrameTracker",182],[5,"Layout",642],[5,"MemorySet",236],[5,"MapPermission",236],[5,"MapArea",236],[5,"PageTable",368],[6,"MapType",236],[5,"KERNEL_SPACE",236],[5,"Arc",643],[17,"Item"],[10,"IntoIterator",644],[10,"Hasher",645],[5,"PTEFlags",368],[5,"Vec",646],[5,"RefMut",647],[1,"isize"],[1,"i32"],[5,"TaskManager",496],[5,"TrapContext",618],[5,"TASK_MANAGER",496],[5,"TaskContext",550],[5,"TaskControlBlock",564],[6,"TaskStatus",564],[8,"VPNRange",62],[8,"FrameAllocatorImpl",182],[5,"TaskManagerInner",496]],"r":[[19,16],[22,16],[23,16],[43,182],[44,236],[45,236],[46,236],[47,236],[48,368],[49,62],[50,62],[51,62],[52,62],[54,182],[60,236],[61,368],[469,471],[497,550],[603,618]],"b":[[118,"impl-From%3CPhysPageNum%3E-for-PhysAddr"],[119,"impl-From%3Cusize%3E-for-PhysAddr"],[121,"impl-From%3CVirtPageNum%3E-for-VirtAddr"],[122,"impl-From%3Cusize%3E-for-VirtAddr"],[123,"impl-From%3Cusize%3E-for-PhysPageNum"],[124,"impl-From%3CPhysAddr%3E-for-PhysPageNum"],[127,"impl-From%3CVirtAddr%3E-for-VirtPageNum"],[128,"impl-From%3Cusize%3E-for-VirtPageNum"],[292,"impl-LowerHex-for-MapPermission"],[293,"impl-UpperHex-for-MapPermission"],[294,"impl-Debug-for-MapPermission"],[295,"impl-Octal-for-MapPermission"],[296,"impl-Binary-for-MapPermission"],[411,"impl-UpperHex-for-PTEFlags"],[412,"impl-Debug-for-PTEFlags"],[413,"impl-Octal-for-PTEFlags"],[414,"impl-Binary-for-PTEFlags"],[415,"impl-LowerHex-for-PTEFlags"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAIABQwARAAwAHwACACQABAAsAAkANwAAAD0AAQBAAAAARQABAEgAAABLACkAdwABAHoAAwCAAAEAgwAFAI8AJwC4AAEAvAARANQAAADZAA4A6wAAAO0AAQD0AAUA+wACAAMBAAAGAQ4AGAEBABsBAgAfAQoAMwEBAEABAgBEAQIASQEDAE4BAQBRAQQAWQEBAFwBEABuAQUAdwEEAIIBAQCGAQoAlQEMAKgBAACqAQAAswEDALgBAgC8AQAAwQEBAMQBAQDHAQgA0QEBANYBAADZAQEA4AEHAOsBAAD1AQYAAgIAAB4CCAAoAgEAMAICADUCAgA6AgQAQAICAEUCAgBKAg8AYwIBAG0CAQB3AgIA"}]\
]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
